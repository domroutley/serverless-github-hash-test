service: DomTesting

frameworkVersion: ">=1.27.2 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: "${opt:stage, 'test'}"
  region: eu-central-1
  timeout: 2

package:
  individually: true
  exclude:
    - ".*/**"

plugins:
  - serverless-plugin-git-variables

functions:

  alpha:
    name: ${self:service}-alpha
    description: "Branch: ${git:branch} - Commit: ${git:sha1}"
    handler: function_alpha/function.handler
    package:
      include:
        - function_alpha/node_modules/**
        - function_alpha/function.js
    role: callingFunctions

  beta:
    name: ${self:service}-beta
    description: "Branch: ${git:branch} - Commit: ${git:sha1}"
    handler: function_beta/function.handler
    package:
      include:
        - function_beta/function.js
    events:
      - http:
          method: POST
          path: beta
          authorizer: aws_iam
    role: subFunctions

  gamma:
    name: ${self:service}-gamma
    description: "Branch: ${git:branch} - Commit: ${git:sha1}"
    handler: function_gamma/function.handler
    package:
      include:
        - function_gamma/function.js
    events:
      - http:
          method: POST
          path: gamma
          authorizer: aws_iam
    role: subFunctions

resources:
  Resources:

    subFunctions:
      Type: AWS::IAM::Role
      Properties:
        RoleName: subFunctions-IAMrole-${self:service}-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

    callingFunctions:
      Type: AWS::IAM::Role
      Properties:
        RoleName: callingFunctions-IAMrole-${self:service}-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        Policies:
          - PolicyName: APIGatewayRegionLimitedAccess-${self:service}-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - execute-api:Invoke
                    - execute-api:InvalidateCache
                  Resource:
                    - "arn:aws:execute-api:${self:provider.region}:*:*/*/${self:provider.stage}/POST"
